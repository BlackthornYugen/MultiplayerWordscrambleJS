//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MultiplayerWordscrambleClientJS.WordScrambleMPClient {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Word", Namespace="http://schemas.datacontract.org/2004/07/MultiplayerWordscrambleJS")]
    [System.SerializableAttribute()]
    public partial class Word : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string scrambledWordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string unscrambledWordField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string scrambledWord {
            get {
                return this.scrambledWordField;
            }
            set {
                if ((object.ReferenceEquals(this.scrambledWordField, value) != true)) {
                    this.scrambledWordField = value;
                    this.RaisePropertyChanged("scrambledWord");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string unscrambledWord {
            get {
                return this.unscrambledWordField;
            }
            set {
                if ((object.ReferenceEquals(this.unscrambledWordField, value) != true)) {
                    this.unscrambledWordField = value;
                    this.RaisePropertyChanged("unscrambledWord");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WordScrambleMPClient.IWordScrambleGame")]
    public interface IWordScrambleGame {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWordScrambleGame/isGameBeingHosted", ReplyAction="http://tempuri.org/IWordScrambleGame/isGameBeingHostedResponse")]
        bool isGameBeingHosted();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWordScrambleGame/isGameBeingHosted", ReplyAction="http://tempuri.org/IWordScrambleGame/isGameBeingHostedResponse")]
        System.Threading.Tasks.Task<bool> isGameBeingHostedAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWordScrambleGame/hostGame", ReplyAction="http://tempuri.org/IWordScrambleGame/hostGameResponse")]
        string hostGame(string playerName, string hostAddress, string wordToScramble);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWordScrambleGame/hostGame", ReplyAction="http://tempuri.org/IWordScrambleGame/hostGameResponse")]
        System.Threading.Tasks.Task<string> hostGameAsync(string playerName, string hostAddress, string wordToScramble);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWordScrambleGame/join", ReplyAction="http://tempuri.org/IWordScrambleGame/joinResponse")]
        MultiplayerWordscrambleClientJS.WordScrambleMPClient.Word join(string playerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWordScrambleGame/join", ReplyAction="http://tempuri.org/IWordScrambleGame/joinResponse")]
        System.Threading.Tasks.Task<MultiplayerWordscrambleClientJS.WordScrambleMPClient.Word> joinAsync(string playerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWordScrambleGame/guessWord", ReplyAction="http://tempuri.org/IWordScrambleGame/guessWordResponse")]
        bool guessWord(string playerName, string guessedWord, string unscrambledWord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWordScrambleGame/guessWord", ReplyAction="http://tempuri.org/IWordScrambleGame/guessWordResponse")]
        System.Threading.Tasks.Task<bool> guessWordAsync(string playerName, string guessedWord, string unscrambledWord);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWordScrambleGameChannel : MultiplayerWordscrambleClientJS.WordScrambleMPClient.IWordScrambleGame, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WordScrambleGameClient : System.ServiceModel.ClientBase<MultiplayerWordscrambleClientJS.WordScrambleMPClient.IWordScrambleGame>, MultiplayerWordscrambleClientJS.WordScrambleMPClient.IWordScrambleGame {
        
        public WordScrambleGameClient() {
        }
        
        public WordScrambleGameClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WordScrambleGameClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WordScrambleGameClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WordScrambleGameClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool isGameBeingHosted() {
            return base.Channel.isGameBeingHosted();
        }
        
        public System.Threading.Tasks.Task<bool> isGameBeingHostedAsync() {
            return base.Channel.isGameBeingHostedAsync();
        }
        
        public string hostGame(string playerName, string hostAddress, string wordToScramble) {
            return base.Channel.hostGame(playerName, hostAddress, wordToScramble);
        }
        
        public System.Threading.Tasks.Task<string> hostGameAsync(string playerName, string hostAddress, string wordToScramble) {
            return base.Channel.hostGameAsync(playerName, hostAddress, wordToScramble);
        }
        
        public MultiplayerWordscrambleClientJS.WordScrambleMPClient.Word join(string playerName) {
            return base.Channel.join(playerName);
        }
        
        public System.Threading.Tasks.Task<MultiplayerWordscrambleClientJS.WordScrambleMPClient.Word> joinAsync(string playerName) {
            return base.Channel.joinAsync(playerName);
        }
        
        public bool guessWord(string playerName, string guessedWord, string unscrambledWord) {
            return base.Channel.guessWord(playerName, guessedWord, unscrambledWord);
        }
        
        public System.Threading.Tasks.Task<bool> guessWordAsync(string playerName, string guessedWord, string unscrambledWord) {
            return base.Channel.guessWordAsync(playerName, guessedWord, unscrambledWord);
        }
    }
}
